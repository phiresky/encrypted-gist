{"version":3,"sources":["../src/base64.ts","../src/github.ts","../src/main.ts"],"names":["base64","Github","Github.constructor","Github.getRepo","Github.fetch","Github.fetchJSON","Github.fetchRaw","Github.postJSON","Github.createGist","Github.getGist","GithubRepo","GithubRepo.constructor","GithubRepo.getRefs","GithubRepo.getRef","GithubRepo.updateRef","GithubRepo.getHead","GithubRepo.getTree","GithubRepo.createBlob","GithubRepo.getBlob","GithubRepo.createTree","GithubRepo.createCommit","GithubRepo.pushFileToMaster","log","SimpleCrypto","SimpleCrypto.encrypt","SimpleCrypto.decrypt","Upload","Upload.getAllowUploadURL","Upload.uploadEncrypted","Upload.downloadEncrypted","Util","Util.readFile","Util.randomString","Util.hexToArr","Util.arrToHex","Util.joinBuffers","Util.htmlEscape","Util.getMimeType","Util.createBlobUrl","GUI","GUI.displayFile","GUI.beginUpload","GUI.initializeUploader","GUI.initializeNode"],"mappings":";;;;;;;;;;;;AAAA,IAAO,MAAM,CAoDZ;AApDD,CAAA,UAAO,QAAM,EAAC;AACAA,YAAAA,CAAAA,MAAMA,GAAGA,kEAAkEA,CAACA;AAC5EA,YAAAA,CAAAA,UAAUA,GAAGA,kEAAkEA,CAACA;AAChFA,YAAAA,CAAAA,MAAMA,GAAGA,UAASA,WAAwBA,EAAEA,GAAYA,EAAEA,MAAeA,EAAAA;AACrF,YAAM,KAAK,GAAG,GAAG,GAAG,QAAA,CAAA,UAAU,GAAG,QAAA,CAAA,MAAM,CAAC;AACxC,YAAI,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC;YAAE,GAAG,GAAG,KAAK,CAAC,MAAM;YAAE,MAAM,GAAG,EAAE,CAAC;AAEzE,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;AAChC,kBAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/B,kBAAM,IAAI,KAAK,CAAC,AAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,IAAK,CAAC,GAAK,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,AAAC,CAAC,CAAC;AAC7D,kBAAM,IAAI,KAAK,CAAC,AAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAA,IAAK,CAAC,GAAK,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,AAAC,CAAC,CAAC;AAClE,kBAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;SACnC;AAED,YAAI,AAAC,GAAG,GAAG,CAAC,KAAM,CAAC,EAAE;AACpB,kBAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,GAAG,GAAG,EAAE,CAAA,AAAC,CAAC;SACtE,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;AACzB,kBAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,IAAI,GAAG,EAAE,CAAA,AAAC,CAAC;SACvE;AAED,eAAO,MAAM,CAAC;KACd,CAACA;AAEWA,YAAAA,CAAAA,MAAMA,GAAGA,UAASA,MAAcA,EAAEA,GAAYA,EAAAA;AAC1D,YAAM,KAAK,GAAG,GAAG,GAAG,QAAA,CAAA,UAAU,GAAG,QAAA,CAAA,MAAM,CAAC;AACxC,YAAI,YAAY,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI;YACtC,GAAG,GAAG,MAAM,CAAC,MAAM;YAAE,CAAC;YAAE,CAAC,GAAG,CAAC;YAC7B,QAAQ;YAAE,QAAQ;YAAE,QAAQ;YAAE,QAAQ,CAAC;AAExC,YAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACtC,wBAAY,EAAE,CAAC;AACf,gBAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACtC,4BAAY,EAAE,CAAC;aACf;SACD;AAED,YAAI,WAAW,GAAG,IAAI,WAAW,CAAC,YAAY,CAAC;YAC9C,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;AAErC,aAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;AAC5B,oBAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,oBAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACxC,oBAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACxC,oBAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAExC,iBAAK,CAAC,CAAC,EAAE,CAAC,GAAG,AAAC,QAAQ,IAAI,CAAC,GAAK,QAAQ,IAAI,CAAC,AAAC,CAAC;AAC/C,iBAAK,CAAC,CAAC,EAAE,CAAC,GAAG,AAAC,CAAC,QAAQ,GAAG,EAAE,CAAA,IAAK,CAAC,GAAK,QAAQ,IAAI,CAAC,AAAC,CAAC;AACtD,iBAAK,CAAC,CAAC,EAAE,CAAC,GAAG,AAAC,CAAC,QAAQ,GAAG,CAAC,CAAA,IAAK,CAAC,GAAK,QAAQ,GAAG,EAAE,AAAC,CAAC;SACrD;AAED,eAAO,WAAW,CAAC;KACnB,CAAAA;CACDA,CAAAA,CApDM,MAAM,KAAN,MAAM,GAAA,EAAA,CAAA,CAAA,CAoDZ;ACTD,IAAI,SAAS,GAAG,AAAC,aAAQ,UAAK,SAAS,IAAK,UAAU,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE;AAC3F,WAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC1C,iBAAS,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AAChD,iBAAS,IAAI,CAAC,KAAK,EAAE;AAAE,mBAAO,KAAK,YAAY,OAAO,IAAI,KAAK,CAAC,WAAW,KAAK,OAAO,GAAG,KAAK,GAAG,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE;AAAE,uBAAO,CAAC,KAAK,CAAC,CAAC;aAAE,CAAC,CAAC;SAAE;AACxJ,iBAAS,SAAS,CAAC,KAAK,EAAE;AAAE,gBAAI;AAAE,oBAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAAE,CAAC,OAAO,CAAC,EAAE;AAAE,sBAAM,CAAC,CAAC,CAAC,CAAC;aAAE;SAAE;AACnF,iBAAS,QAAQ,CAAC,KAAK,EAAE;AAAE,gBAAI;AAAE,oBAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aAAE,CAAC,OAAO,CAAC,EAAE;AAAE,sBAAM,CAAC,CAAC,CAAC,CAAC;aAAE;SAAE;AACnF,iBAAS,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE;AACvB,gBAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;AACpC,kBAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;SACtF;AACD,YAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KACxB,CAAC,CAAC;CACN,CAAC;;ICtDF,MAAA;AACCC,aADD,MAAA,GAC0FA;YAAtEA,YAAYA,yDAAWA,IAAIA;YAASA,MAAMA;;8BAD9D,MAAA;;AACoBC,YAAAA,CAAAA,YAAYA,GAAZA,YAAYA,CAAeA;AAASA,YAAAA,CAAAA,MAAMA,GAANA,MAAMA,CAA4BA;KAAKA;;iBAD/F,MAAA;;eAEQD,iBAACA,IAAYA,EAAAA;AACnBE,mBAAOA,IAAIA,UAAUA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;SAClCA;;;;;;;;;;;;;WACUF,UAACA,IAAYA,EAAEA,IAAkBA,EAAsBA;gBAApBA,YAAYA,yDAAGA,KAAKA;;AD2D3D,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AC1D3DG,oBAAIA,CAACA,IAAIA,EAAEA,IAAIA,GAAGA,EAAEA,OAAOA,EAAEA,IAAIA,OAAOA,EAAEA,EAAEA,CAACA;AAC7CA,oBAAIA,CAACA,IAAIA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,OAAOA,GAAGA,IAAIA,OAAOA,EAAEA,CAACA;AAChDA,oBAAMA,CAACA,GAAYA,IAAIA,CAACA,OAAkBA,CAACA;AAC3CA,oBAAIA,YAAYA,EACfA,IAAIA,IAAIA,CAACA,YAAYA,EAAEA,CAACA,CAACA,MAAMA,CAACA,eAAeA,EAAEA,QAAQA,GAAGA,IAAIA,CAACA,YAAYA,CAACA,CAACA,KAC1EA,MAAMA,KAAKA,YAAUA,IAAIA,CAACA,MAAMA,SAAIA,IAAIA,2BAAwBA,CAACA;AACvEA,mBAAGA,CAACA,WAAWA,IAAIA,IAAIA,CAACA,MAAMA,IAAEA,EAAEA,CAAAA,AAACA,GAAGA,GAAGA,GAAEA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,CAACA,CAACA;AAC/DA,uBAAOA,MAAMA,KAAKA,CAACA,IAAIA,CAACA,MAAMA,GAAGA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;aAC7CA,CAAAA,CAAAA;SAAAH;;;eACcA,mBAACA,IAAYA,EAAEA,IAAkBA,EAAsBA;gBAApBA,YAAYA,yDAAGA,KAAKA;;ADiE/D,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AChE3DI,uBAAOA,MAAMA,CAACA,MAAMA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,EAAEA,IAAIA,EAAEA,YAAYA,CAACA,CAAAA,CAAEA,IAAIA,EAAEA,CAACA;aACjEA,CAAAA,CAAAA;SAAAJ;;;eACaA,kBAACA,IAAYA,EAAEA,IAAkBA,EAAsBA;gBAApBA,YAAYA,yDAAGA,KAAKA;;ADmE9D,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AClE3DK,oBAAMA,OAAOA,GAAGA,IAAIA,OAAOA,EAAEA,CAACA;AAC9BA,uBAAOA,CAACA,MAAMA,CAACA,QAAQA,EAAEA,+BAA+BA,CAACA,CAACA;AAC1DA,oBAAMA,CAACA,GAAGA,MAAMA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,EAAEA,EAAEA,OAAOA,EAAPA,OAAOA,EAAEA,EAAEA,YAAYA,CAACA,CAACA;AAC5DA,uBAAOA,MAAMA,CAACA,CAACA,WAAWA,EAAEA,CAACA;aAC7BA,CAAAA,CAAAA;SAAAL;;;eACaA,kBAACA,IAAYA,EAAEA,IAASA,EAAuCA;gBAArCA,MAAMA,yDAAGA,MAAMA;gBAAEA,YAAYA,yDAAGA,KAAKA;;ADqEtE,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;ACpE3DM,oBAAMA,OAAOA,GAAGA,IAAIA,OAAOA,EAAEA,CAACA;AAC9BA,uBAAOA,CAACA,MAAMA,CAACA,cAAcA,EAAEA,gCAAgCA,CAACA,CAACA;AACjEA,uBAAOA,MAAMA,IAAIA,CAACA,SAASA,CAACA,IAAIA,EAAEA,EAAEA,MAAMA,EAANA,MAAMA,EAAEA,OAAOA,EAAPA,OAAOA,EAAEA,IAAIA,EAAEA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,EAAEA,EAAEA,YAAYA,CAACA,CAACA;aACjGA,CAAAA,CAAAA;SAAAN;;;eACeA,oBAACA,WAAmBA,EAAEA,KAAkDA,EAAwCA;gBAAtCA,SAASA,yDAAGA,IAAIA;gBAAEA,YAAYA,yDAAGA,KAAKA;;ADuEzH,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;ACtE3DO,uBAAOA,MAAMA,IAAIA,CAACA,QAAQA,CAACA,OAAOA,EAAEA,EAAEA,WAAWA,EAAXA,WAAWA,EAAEA,UAAQA,SAASA,EAAEA,KAAKA,EAAEA,KAAKA,EAAEA,EAAEA,MAAMA,EAAEA,YAAYA,CAACA,CAACA;aAC5GA,CAAAA,CAAAA;SAAAP;;;eACYA,iBAACA,EAAUA,EAAAA;ADyEjB,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;ACxE3DQ,uBAAOA,MAAMA,IAAIA,CAACA,SAASA,CAACA,QAAQA,GAAGA,EAAEA,CAACA,CAACA;aAC3CA,CAAAA,CAAAA;SAAAR;;;WAlCF,MAAA;;;IAoCA,UAAA;AACCS,aADD,UAAA,CACoBA,MAAcA,EAASA,IAAYA,EAAAA;8BADvD,UAAA;;AACoBC,YAAAA,CAAAA,MAAMA,GAANA,MAAMA,CAAQA;AAASA,YAAAA,CAAAA,IAAIA,GAAJA,IAAIA,CAAQA;KAAKA;;iBAD5D,UAAA;;eAGcD,mBAAAA;AD6EN,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AC5E3DE,uBAAOA,MAAMA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,WAAWA,CAACA,CAACA;aAC5DA,CAAAA,CAAAA;SAAAF;;;eACWA,kBAAqBA;gBAApBA,GAAGA,yDAAGA,cAAcA;;AD+E1B,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AC9E3DG,uBAAOA,MAAMA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,YAAYA,GAAGA,GAAGA,CAACA,CAACA;aACnEA,CAAAA,CAAAA;SAAAH;;;eACcA,mBAACA,GAAWA,EAAsBA;gBAApBA,GAAGA,yDAAGA,cAAcA;;ADiF1C,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AChF3DI,uBAAOA,MAAMA,IAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,YAAYA,GAAGA,GAAGA,EAAEA,EAAEA,GAAGA,EAAHA,GAAGA,EAAEA,EAAEA,OAAOA,CAACA,CAACA;aACpFA,CAAAA,CAAAA;SAAAJ;;;eACYA,mBAAAA;ADmFN,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AClF3DK,oBAAMA,MAAMA,GAAGA,MAAMA,IAAIA,CAACA,MAAMA,EAAEA,CAACA;AACnCA,uBAAOA,MAAMA,CAACA,MAAMA,CAACA,GAAaA,CAACA;aACnCA,CAAAA,CAAAA;SAAAL;;;eACYA,iBAACA,GAAWA,EAAmBA;gBAAjBA,SAASA,yDAAGA,KAAKA;;ADqFrC,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;ACpF3DM,uBAAOA,MAAMA,IAAIA,CAACA,MAAMA,CAACA,SAASA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,aAAaA,GAAGA,GAAGA,IAAIA,SAASA,GAAGA,cAAcA,GAAGA,EAAEA,CAAAA,AAACA,CAACA,CAACA;aACxGA,CAAAA,CAAAA;SAAAN;;;eACeA,oBAACA,IAAiBA,EAAAA;ADuF3B,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;ACtF3DO,oBAAMA,IAAIA,GAAGA,MAAMA,IAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,YAAYA,EAAEA;AACjEA,4BAAQA,EAAEA,QAAQA,EAAEA,OAAOA,EAAEA,MAAMA,CAACA,MAAMA,CAACA,IAAIA,EAAEA,KAAKA,EAAEA,IAAIA,CAACA;iBAC7DA,CAACA,CAACA;AACHA,uBAAOA,IAAIA,CAACA,GAAGA,CAACA;aAChBA,CAAAA,CAAAA;SAAAP;;;eACYA,iBAACA,GAAGA,EAAAA;ADyFV,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;ACxF3DQ,uBAAOA,MAAMA,IAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,aAAaA,GAAGA,GAAGA,CAACA,CAACA;aACnEA,CAAAA,CAAAA;SAAAR;;;eACeA,oBAACA,SAAiBA,EAAEA,IAAYA,EAAEA,GAAWA,EAAAA;AD2FtD,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AC1F3DS,oBAAMA,IAAIA,GAAGA,MAAMA,IAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,YAAYA,EAAEA;AACjEA,6BAASA,EAATA,SAASA,EAAEA,IAAIA,EAAEA,CAACA,EAAEA,IAAIA,EAAJA,IAAIA,EAAEA,IAAIA,EAAEA,QAAQA,EAAEA,IAAIA,EAAEA,MAAMA,EAAEA,GAAGA,EAAHA,GAAGA,EAAEA,CAACA;iBAC9DA,CAACA,CAACA;AACHA,uBAAOA,IAAIA,CAACA;aACZA,CAAAA,CAAAA;SAAAT;;;eACiBA,sBAACA,MAAcA,EAAEA,IAAYA,EAAEA,OAAeA,EAAAA;AD6FzD,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AC5F3DU,uBAAOA,MAAMA,IAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,IAAIA,CAACA,IAAIA,GAAGA,cAAcA,EAAEA,EAAEA,OAAOA,EAAPA,OAAOA,EAAEA,OAAOA,EAAEA,CAACA,MAAMA,CAACA,EAAEA,IAAIA,EAAJA,IAAIA,EAAEA,CAACA,CAACA;aACpGA,CAAAA,CAAAA;SAAAV;;;eACqBA,0BAACA,IAAYA,EAAEA,OAAmBA,EAAEA,aAAqBA,EAAAA;AD+FxE,mBAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AC9F3DW,oBAAMA,IAAIA,GAAGA,MAAMA,IAAIA,CAACA,OAAOA,EAAEA,CAACA;AAClCA,oBAAMA,OAAOA,GAAGA,MAAMA,IAAIA,CAACA,UAAUA,CAACA,IAAIA,EAAEA,IAAIA,GAAEA,MAAMA,IAAIA,CAACA,UAAUA,CAACA,OAAOA,CAACA,MAAMA,CAACA,CAAAA,CAACA,CAACA;AACzFA,oBAAMA,MAAMA,GAAGA,OAAOA,CAACA,GAAGA,CAACA;AAC3BA,oBAAMA,KAAKA,GAAGA,OAAOA,CAACA,IAAIA,CAACA;AAC3BA,oBAAMA,OAAOA,GAAGA,KAAKA,CAACA,MAAMA,CAACA,UAAAA,IAAIA;2BAAIA,IAAIA,CAACA,IAAIA,IAAIA,IAAIA;iBAAAA,CAACA,CAACA,CAACA,CAACA,CAACA,GAAGA,CAACA;AAC/DA,oBAAMA,MAAMA,GAAGA,MAAMA,IAAIA,CAACA,YAAYA,CAACA,IAAIA,EAAEA,MAAMA,EAAEA,aAAaA,CAACA,CAACA;AACpEA,sBAAMA,IAAIA,CAACA,SAASA,CAACA,MAAMA,CAACA,GAAGA,CAACA,CAACA;AACjCA,uBAAOA,OAAOA,CAACA;aACfA,CAAAA,CAAAA;SAAAX;;;WA9CF,UAAA;;;ACrCA,IAAM,QAAQ,GAAG,IAAI,CAAC;AAEtB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,YAAY,IAAI,WAAW,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;AACnG,IAAI,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEpC,IAAM,CAAC,GAAG,SAAJ,CAAC,CAAG,CAAC;WAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAkB;CAAA,CAAC;AAC5E,SAAA,GAAA,CAAa,IAAS,EAAA;AACrBY,WAAOA,CAACA,GAAGA,CAACA,IAAIA,CAACA,CAACA;AAClBA,QAAMA,CAACA,GAAGA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA;AACvBA,QAAGA,CAACA,EAAEA,CAACA,CAACA,SAASA,IAAIA,IAAIA,GAAGA,MAAMA,CAACA;CACnCA;AAID,IAAO,YAAY,CAsBlB;AAtBD,CAAA,UAAO,YAAY,EAAC;AACRC,gBAAAA,CAAAA,mBAAmBA,GAAGA,SAASA,CAACA;AAC3CA,aAAAA,OAAAA,CAA8BA,IAAgBA,EAAAA;AFmLvC,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AElL3DC,eAAGA,CAACA,0BAA0BA,CAACA,CAACA;AAChCA,gBAAMA,GAAGA,GAAcA,MAAMA,MAAMA,CAACA,MAAMA,CAACA,WAAWA,CAACA,EAAEA,IAAIA,EAAEA,YAAAA,CAAAA,mBAAmBA,EAAEA,MAAMA,EAAEA,GAAGA,EAAEA,EAAEA,IAAIA,EAAEA,CAACA,SAASA,CAACA,CAACA,CAACA;AACtHA,gBAAMA,EAAEA,GAAGA,IAAIA,UAAUA,CAACA,EAAEA,CAACA,CAACA;AAACA,kBAAMA,CAACA,eAAeA,CAACA,EAAEA,CAACA,CAACA;AAC1DA,eAAGA,CAACA,eAAeA,CAACA,CAACA;AACrBA,gBAAMA,SAASA,GAAGA,MAAMA,MAAMA,CAACA,MAAMA,CAACA,OAAOA,CAACA,EAAEA,IAAIA,EAAEA,YAAAA,CAAAA,mBAAmBA,EAAEA,EAAEA,EAAFA,EAAEA,EAAEA,EAAEA,GAAGA,EAAEA,IAAIA,CAAgBA,CAACA;AAC3GA,mBAAOA;AACNA,oBAAIA,EAAEA,CAACA,EAAEA,EAAEA,IAAIA,UAAUA,CAACA,SAASA,CAACA,CAACA;AACrCA,mBAAGA,EAAEA,MAAMA,CAACA,MAAMA,EAACA,MAAMA,MAAMA,CAACA,MAAMA,CAACA,SAASA,CAACA,KAAKA,EAAEA,GAAGA,CAACA,CAAAA,EAAEA,IAAIA,EAAEA,KAAKA,CAACA;aAC1EA,CAACA;SACFA,CAAAA,CAAAA;KFqLG;AE/LkBD,gBAAAA,CAAAA,OAAOA,GAAAA,OAU5BA,CAAAA;AACDA,aAAAA,OAAAA,CAA8BA,IAAgBA,EAAEA,OAAeA,EAAAA;AFuLxD,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AEtL3DE,eAAGA,CAACA,gBAAgBA,CAACA,CAACA;AACtBA,gBAAMA,EAAEA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA;AAChCA,gBAAMA,cAAcA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,EAAEA,CAACA,CAACA;AACzCA,gBAAMA,GAAGA,GAAGA,IAAIA,UAAUA,CAACA,MAAMA,CAACA,MAAMA,CAACA,OAAOA,EAAEA,IAAIA,CAACA,CAACA,CAACA;AACzDA,eAAGA,CAACA,eAAeA,CAACA,CAACA;AACrBA,gBAAMA,YAAYA,GAAGA,MAAMA,MAAMA,CAACA,MAAMA,CAACA,SAASA,CAACA,KAAKA,EAAEA,GAAGA,EAAEA,YAAAA,CAAAA,mBAAmBA,EAAEA,KAAKA,EAAEA,CAACA,SAASA,CAACA,CAACA,CAACA;AACxGA,mBAAOA,MAAMA,MAAMA,CAACA,MAAMA,CAACA,OAAOA,CAACA,EAAEA,IAAIA,EAAEA,YAAAA,CAAAA,mBAAmBA,EAAEA,EAAEA,EAAFA,EAAEA,EAAEA,EAAEA,YAAYA,EAAEA,cAAcA,CAAgBA,CAACA;SACnHA,CAAAA,CAAAA;KFwLG;AEhMkBF,gBAAAA,CAAAA,OAAOA,GAAAA,OAQ5BA,CAAAA;CACDA,CAAAA,CAtBM,YAAY,KAAZ,YAAY,GAAA,EAAA,CAAA,CAAA,CAsBlB;AAID,IAAO,MAAM,CA8CZ;AA9CD,CAAA,UAAO,MAAM,EAAC;AAEbG,QAAMA,gBAAgBA,GAAiBA,SAAjCA,gBAAgBA,CAAgCA,CAACA,EAAAA;AFuLhD,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AEtL3D,gBAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACnC,gBAAI,CAAC,CAAC,UAAU,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;AAC5G,gBAAI,CAAC,CAAC,UAAU,IAAI,GAAG,EAAE,MAAM,qBAAqB,CAAC;AACrD,mBAAO,CAAC,MAAM,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,sBACtD,CAAC,EAAG,EAAE,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,EACrD,CAAA,CAAE,EAAE,CAAC;SACP,CAAA,CAAA;KAAAA,CAAAA;AACDA,QAAMA,gBAAgBA,GAAGA,SAAnBA,gBAAgBA,CAAIA,CAACA;eAAKA,IAAIA,CAACA,gBAAgBA,CAACA,IAAIA,CAACA,YAAYA,CAACA,CAACA,EAAEA,EAAEA,CAACA,EAAEA,CAACA,EAAEA,KAAKA,CAACA;KAAAA,CAACA;AAE1FA,QAAIA,YAAYA,GAAiBA,QAAQA,GAAGA,gBAAgBA,GAAGA,gBAAgBA,CAACA;AAEhFA,QAAIA,cAAqDA,YAAAA,CAACA;AAC1DA,QAAIA,QAAQA,EAAEA,cAAcA,GAAGA,UAACA,GAAGA;eAAKA,IAAIA,CAACA,OAAOA,CAACA,GAAGA,CAACA;KAAAA,CAACA,KACrDA,cAAcA,GAAGA,UAAeA,GAAGA,EAAAA;AF2L7B,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AE1L/D,gBAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACvC,gBAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,gBAAI,IAAI,CAAC,SAAS,EAAE;AACnB,uBAAO,MAAM,CAAC,MAAM,EAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA,CAAE,IAAI,EAAE,CAAA,EAAE,IAAI,CAAC,CAAC;aACrE,MACA,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SAC1C,CAAA,CAAA;KAAAA,CAAAA;AACDA,aAAAA,iBAAAA,GAAAA;AF8LO,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AE7L3DC,oBAAQA,CAACA,IAAIA,GAAGA,eAAeA,GAAGA,MAAMA,CAACA,YAAYA,CAACA;SACtDA,CAAAA,CAAAA;KF+LG;AEjMkBD,UAAAA,CAAAA,iBAAiBA,GAAAA,iBAEtCA,CAAAA;AACDA,aAAAA,eAAAA,CAAsCA,IAAoBA,EAAEA,QAAmBA,EAAAA;AFiMxE,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;;;AEhM3DE,eAAGA,CAACA,cAAcA,CAACA,CAACA;AACpBA,gBAAMA,QAAQA,GAAGA,IAAIA,UAAUA,CAACA,CAACA,CAACA,CAACA;AACnCA,gBAAMA,SAASA,GAAGA,MAAMA,IAAIA,CAACA,WAAWA,CAACA,IAAIA,WAAWA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA,SAASA,CAACA,IAAIA,CAACA,CAACA,EAAEA,QAAQA,EAAEA,QAAQA,CAACA,CAACA;;uBACzFA,MAAMA,YAAYA,CAACA,OAAOA,CAACA,SAASA,CAACA;;gBAAlDA,IAAIA,QAAJA,IAAIA;gBAAEA,GAAGA,QAAHA,GAAGA;;;AAEhBA,mBAAOA,EAAEA,IAAIA,EAAJA,IAAIA,EAAEA,GAAGA,EAAHA,GAAGA,EAAEA,GAAGA,EAAEA,MAAMA,YAAYA,EAACA,MAAMA,SAAAA,IAAIA,EAACA,WAAWA,MAAAA,2BAAIA,IAAIA,EAACA,CAAAA,CAACA,EAAEA,CAACA;SAC/EA,CAAAA,CAAAA;KFkMG;AEzMkBF,UAAAA,CAAAA,eAAeA,GAAAA,eAOpCA,CAAAA;AACDA,aAAAA,iBAAAA,CAAwCA,GAAWA,EAAEA,GAAWA,EAAAA;AFoMzD,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AEnM3DG,eAAGA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,UAAUA,CAACA,MAAMA,CAACA,MAAMA,CAACA,GAAGA,EAAEA,IAAIA,CAACA,CAACA,CAACA,CAACA;AAC9DA,gBAAMA,GAAGA,GAAGA,MAAMA,YAAYA,CAACA,OAAOA,CAACA,IAAIA,UAAUA,EAACA,MAAMA,cAAcA,CAACA,GAAGA,CAACA,CAAAA,CAACA,EAAEA,GAAGA,CAACA,CAACA;AACvFA,gBAAMA,GAAGA,GAAGA,IAAIA,UAAUA,CAACA,GAAGA,CAACA,CAACA,OAAOA,CAACA,CAACA,CAACA,CAACA;AAC3CA,gBAAMA,IAAIA,GAAGA,IAAIA,WAAWA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,UAAUA,CAACA,GAAGA,EAAEA,CAACA,EAAEA,GAAGA,CAACA,CAACA,CAACA;AACnEA,eAAGA,CAACA,oBAAoBA,GAAGA,IAAIA,CAACA,CAACA;AACjCA,mBAAOA;AACNA,oBAAIA,EAAEA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,CAAmBA;AACxCA,oBAAIA,EAAEA,IAAIA,UAAUA,CAACA,GAAGA,EAAEA,GAAGA,GAAGA,CAACA,CAACA;aAClCA,CAAAA;SACDA,CAAAA,CAAAA;KFqMG;AE/MkBH,UAAAA,CAAAA,iBAAiBA,GAAAA,iBAUtCA,CAAAA;CACDA,CAAAA,CA9CM,MAAM,KAAN,MAAM,GAAA,EAAA,CAAA,CAAA,CA8CZ;AAED,IAAO,IAAI,CA2CV;AA3CD,CAAA,UAAO,IAAI,EAAC;AACXI,aAAAA,QAAAA,CAA+BA,CAAYA,EAAAA;AFuMpC,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AEtM3DC,mBAAOA,IAAIA,OAAOA,CAAcA,UAAAA,OAAOA,EAAAA;AACtCA,oBAAMA,CAACA,GAAGA,IAAIA,UAAUA,EAAEA,CAACA;AAC3BA,iBAACA,CAACA,MAAMA,GAAGA,UAAAA,CAACA;2BAAIA,OAAOA,CAACA,CAACA,CAACA,MAAqBA,CAACA;iBAAAA,CAACA;AACjDA,iBAACA,CAACA,iBAAiBA,CAACA,CAACA,CAACA,CAACA;aACvBA,CAACA,CAACA;SACHA,CAAAA,CAAAA;KFwMG;AE9MkBD,QAAAA,CAAAA,QAAQA,GAAAA,QAM7BA,CAAAA;AACDA,aAAAA,YAAAA,CAA6BA,SAAiBA;YAAEA,SAASA,yDAAGA,SAASA;4BAAAA;AACpEE,gBAAMA,MAAMA,GAAGA,AAACA,IAAIA,CAACA,MAAMA,EAAEA,IAAIA,SAASA,GAAGA,CAACA,GAAGA,SAASA,CAAAA,AAACA,GAAGA,SAASA,GAAIA,CAACA,CAACA;AAC7EA,mBAAOA,MAAMA,CAACA,MAAMA,CAACA,MAAMA,CAACA,eAAeA,CAACA,IAAIA,UAAUA,CAACA,MAAMA,GAAGA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,MAAMA,EAAEA,IAAIA,EAAEA,KAAKA,CAACA,CAACA,MAAMA,CAACA,CAACA,EAAEA,MAAMA,CAACA,CAACA;SACvHA;KAAAA;AAHeF,QAAAA,CAAAA,YAAYA,GAAAA,YAG3BA,CAAAA;AACDA,aAAAA,QAAAA,CAAyBA,GAAWA,EAAAA;AACnCG,YAAMA,GAAGA,GAAGA,IAAIA,UAAUA,CAACA,GAAGA,CAACA,MAAMA,GAAGA,CAACA,CAACA,CAACA;AAC3CA,aAAKA,IAAIA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,GAAGA,CAACA,MAAMA,EAAEA,CAACA,IAAIA,CAACA,EAAEA;AACvCA,eAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,QAAQA,CAACA,GAAGA,CAACA,MAAMA,CAACA,CAACA,EAAEA,CAACA,CAACA,EAAEA,EAAEA,CAACA,CAACA;SAC5CA;AACDA,eAAOA,GAAGA,CAACA;KACXA;AANeH,QAAAA,CAAAA,QAAQA,GAAAA,QAMvBA,CAAAA;AACDA,aAAAA,QAAAA,CAAyBA,GAAeA,EAAAA;AACvCI,YAAIA,GAAGA,GAAGA,EAAEA,CAACA;AACbA,aAAKA,IAAMA,IAAIA,IAAIA,GAAGA;AAAEA,eAAGA,IAAKA,IAAIA,GAAGA,EAAEA,GAAGA,GAAGA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,EAAEA,CAACA,AAACA,CAACA;SAAAA,AACzFA,OAAOA,GAAGA,CAACA;KACXA;AAJeJ,QAAAA,CAAAA,QAAQA,GAAAA,QAIvBA,CAAAA;AACDA,aAAAA,WAAAA,GAAsDA;0CAAjBA,IAAiBA;AAAjBA,gBAAiBA;;;AF8M/C,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AE7M3DK,mBAAOA,IAAIA,UAAUA,EAACA,MAAMA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,IAAIA,CAACA,IAAIA,CAACA,CAACA,CAAAA,CAACA,CAACA;SAC3DA,CAAAA,CAAAA;KF+MG;AEjNkBL,QAAAA,CAAAA,WAAWA,GAAAA,WAEhCA,CAAAA;AACDA,aAAAA,UAAAA,CAA2BA,CAAQA,EAAAA;AAClCM,YAAMA,GAAGA,GAAGA,QAAQA,CAACA,aAAaA,CAACA,KAAKA,CAACA,CAACA;AAACA,WAAGA,CAACA,WAAWA,GAAGA,CAACA,CAACA;AAC/DA,eAAOA,GAAGA,CAACA,SAASA,CAACA;KACrBA;AAHeN,QAAAA,CAAAA,UAAUA,GAAAA,UAGzBA,CAAAA;AACDA,aAAAA,WAAAA,CAA4BA,KAAaA,EAAAA;AACxCO,YAAMA,GAAGA,GAAGA,KAAKA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA,GAAGA,EAAEA,CAACA;AACnCA,YAAMA,GAAGA,GAAGA,EAACA,GAAGA,EAACA,YAAYA,EAAEA,GAAGA,EAACA,WAAWA,EAAEA,GAAGA,EAACA,YAAYA,EAACA,CAACA;AAClEA,eAAOA,GAAGA,CAACA,KAAKA,CAACA,IAAIA,EAAEA,CAACA;KACxBA;AAJeP,QAAAA,CAAAA,WAAWA,GAAAA,WAI1BA,CAAAA;AACDA,aAAAA,aAAAA,CAA8BA,KAAaA,EAAEA,IAAgBA,EAAAA;AAC5DQ,YAAMA,MAAMA,GAAGA,IAAIA,GAAGA,CAAiBA,CAACA,CAACA,KAAKA,EAAEA,EAAEA,CAACA,CAACA,CAACA,CAACA;AACtDA,YAAMA,KAAKA,GAAGA,IAAIA,QAAQA,CAACA,IAAIA,CAACA,MAAMA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,UAAUA,EAAEA,CAACA,CAACA,CAACA,SAASA,CAACA,CAACA,EAAEA,KAAKA,CAACA,CAACA;AACpFA,YAAMA,IAAIA,GAAGA,MAAMA,CAACA,KAAKA,CAACA,CAACA;AAC3BA,WAAGA,iBAAeA,IAAIA,CAACA,UAAUA,GAAGA,IAAIA,gBAAUA,IAAIA,IAAIA,uBAAuBA,GAAGA,KAAKA,CAACA,QAAQA,CAACA,EAAEA,CAAEA,CAAAA,CAAGA,CAACA;AAC3GA,eAAOA,GAAGA,CAACA,eAAeA,CAACA,IAAIA,IAAIA,CAACA,CAACA,IAAIA,CAACA,EAAEA,EAAEA,IAAIA,EAAEA,IAAIA,IAAIA,YAAYA,EAAEA,CAACA,CAACA,CAACA;KAC7EA;AANeR,QAAAA,CAAAA,aAAaA,GAAAA,aAM5BA,CAAAA;CACDA,CAAAA,CA3CM,IAAI,KAAJ,IAAI,GAAA,EAAA,CAAA,CAAA,CA2CV;AAED,IAAO,GAAG,CAwFT;AAxFD,CAAA,UAAO,GAAG,EAAC;AACVS,QAAMA,SAASA,GAAGA,CAACA,CAACA,YAAYA,CAACA,CAACA,CAACA,CAACA,CAACA;AACuDA,KAACA;AAC7FA,QAAMA,KAAKA,GAAiBA,CAC3BA,EAAEA,IAAIA,EAAEA,MAAMA,EAAEA,MAAMA,EAAEA,gBAACA,CAACA,EAAEA,IAAIA;gDAA8BA,IAAIA,WAAWA,EAAEA,CAACA,MAAMA,CAACA,IAAIA,CAACA;SAAQA,EAACA,EACrGA,EAAEA,IAAIA,EAAEA,KAAKA,EAAEA,MAAMA,EAAEA,gBAACA,CAACA,EAAEA,IAAIA;kCAAiBA,IAAIA,CAACA,aAAaA,CAACA,CAACA,EAAEA,IAAIA,CAACA,sBAAeA,CAACA,oBAAcA,CAACA;SAAMA,EAACA,EACjHA,EAAEA,IAAIA,EAAEA,OAAOA,EAAEA,MAAMA,EAAEA,gBAACA,CAACA,EAAEA,IAAIA;mCAAkBA,IAAIA,CAACA,aAAaA,CAACA,CAACA,EAAEA,IAAIA,CAACA;SAAIA,EAACA,EACnFA,EAAEA,IAAIA,EAAEA,OAAOA,EAAEA,MAAMA,EAAEA,gBAACA,CAACA,EAAEA,IAAIA;sDAAqCA,IAAIA,CAACA,aAAaA,CAACA,CAACA,EAAEA,IAAIA,CAACA;SAAYA,EAACA,EAC9GA,EAAEA,IAAIA,EAAEA,OAAOA,EAAEA,MAAMA,EAAEA,gBAACA,CAACA,EAAEA,IAAIA;sDAAqCA,IAAIA,CAACA,aAAaA,CAACA,CAACA,EAAEA,IAAIA,CAACA;SAAYA,EAACA,CAC9GA,CAAAA;AAEDA,aAAAA,WAAAA,CAAqBA,IAA4CA,EAAAA;AAChEC,YAAMA,IAAIA,GAAGA,KAAKA,CAACA,MAAMA,CAACA,UAAAA,CAACA;mBAAIA,CAACA,CAACA,IAAIA,IAAIA,IAAIA,CAACA,IAAIA,CAACA,IAAIA;SAAAA,CAACA,CAACA,CAACA,CAACA,CAACA;AAC5DA,YAAGA,IAAIA,EAAEA;AACRA,qBAASA,CAACA,SAASA,GAAGA,cAAYA,IAAIA,CAACA,UAAUA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,aAC/DA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,IAAIA,CAACA,CAACA;AACzCA,eAAGA,CAACA,oBAAoBA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;SAC3CA,MAAKA,GAAGA,CAACA,eAAeA,GAAGA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;KAC5CA;AAEDD,aAAAA,WAAAA,GAAAA;AFqNO,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;AEpN3DE,gBAAIA;AACHA,oBAAMA,IAAIA,GAAIA,CAACA,CAACA,kBAAkBA,CAACA,CAACA,CAACA,CAAsBA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;AACrEA,oBAAIA,IAAIA,EAAEA;AACTA,wBAAMA,IAAIA,GAAGA,IAAIA,UAAUA,EAACA,MAAMA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA,CAAAA,CAACA,CAACA;AACvDA,wBAAMA,IAAIA,GAAIA,CAACA,CAACA,CAACA,2BAA2BA,CAACA,CAACA,CAACA,CAACA,IAAEA,EAAEA,CAAAA,CAAuBA,KAAKA,CAACA;AACjFA,wBAAGA,CAACA,IAAIA,EAAEA,MAAMA,KAAKA,CAACA,kBAAkBA,CAACA,CAACA;AAC1CA,wBAAMA,IAAIA,GAAGA,EAACA,IAAIA,EAACA,IAAIA,CAACA,IAAIA,EAAEA,IAAIA,EAAJA,IAAIA,EAACA,CAACA;AACpCA,wBAAMA,IAAIA,GAAGA,MAAMA,MAAMA,CAACA,eAAeA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;AACtDA,uBAAGA,CAACA,0CAA0CA,CAACA,CAACA;AAChDA,wBAAMA,GAAGA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA,GAAGA,CAACA,CAACA,MAAMA,EAAEA,IAAIA,EAAEA,KAAKA,CAACA,CAACA;AACvEA,2BAAOA,CAACA,YAAYA,CAACA,EAAEA,EAAEA,EAAEA,EAAEA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,GAAGA,IAAIA,CAACA,GAAGA,CAACA,CAACA;AACzDA,+BAAWA,CAACA,EAACA,IAAIA,EAAJA,IAAIA,EAAEA,IAAIA,EAAJA,IAAIA,EAACA,CAACA,CAACA;iBAC1BA,MAAMA,MAAMA,KAAKA,CAACA,kBAAkBA,CAACA,CAACA;aACtCA,CAAAA,OAAOA,CAACA,EAAEA;AACXA,mBAAGA,CAACA,CAACA,CAACA,CAACA;AAACA,sBAAMA,CAACA,CAACA;aAChBA;SACDA,CAAAA,CAAAA;KF2NG;AE5OkBF,OAAAA,CAAAA,WAAWA,GAAAA,WAiBhCA,CAAAA;AAEDA,aAAAA,kBAAAA,GAAAA;AACCG,iBAASA,CAACA,SAASA,4HAGhBA,KAAKA,CAACA,GAAGA,CAACA,UAAAA,IAAIA;sEAC4BA,IAAIA,CAACA,IAAIA,mBAAYA,IAAIA,CAACA,IAAIA,wCACrDA,IAAIA,CAACA,IAAIA,WAAKA,IAAIA,CAACA,IAAIA;SAAUA,CACrDA,CAACA,IAAIA,CAACA,EAAEA,CAAEA,+IAGXA,CAACA;AACFA,SAACA,CAACA,eAAeA,CAACA,CAACA,CAACA,CAACA,CAACA,gBAAgBA,CAACA,OAAOA,EAAEA,WAAWA,CAACA,CAACA;KAC7DA;AAGDH,aAAAA,cAAAA,GAAAA;AFwNO,eAAO,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa;;AEtN3DI,gBAAMA,IAAIA,GAAGA,OAAOA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;AACnCA,gBAAIA,IAAIA,CAACA,MAAMA,KAAKA,CAACA,EAAEA;AACtBA,uBAAOA,CAACA,GAAGA,CAACA,cAAcA,GAAGA,OAAOA,CAACA,IAAIA,CAACA,CAACA,CAACA,GAAGA,uBAAuBA,CAACA,CAACA;AACxEA,uBAAOA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA;aAChBA,MAAMA;AACNA,uBAAOA,CAACA,GAAGA,CAACA,WAAWA,CAACA,CAACA;AACzBA,oBAAMA,EAAEA,GAAGA,OAAOA,CAACA,IAAIA,CAACA,CAACA;AACzBA,oBAAIA,CAACA,EAAEA,CAACA,UAAUA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,EAAEA,MAAMA,IAAIA,CAACA,CAACA,CAACA,GAAGA,iBAAiBA,CAACA;AAC/DA,oBAAMA,IAAIA,GAAGA,IAAIA,UAAUA,CAACA,EAAEA,CAACA,YAAYA,CAACA,IAAIA,CAACA,CAACA,CAACA,CAACA,CAACA,CAACA;aACtDA;SACDA,CAAAA,CAAAA;KAAAJ;AACDA,YAAQA,CAACA,gBAAgBA,CAACA,kBAAkBA,EAAEA,YAAAA;AAC7CA,YAAIA,OAAOA,OAAOA,KAAKA,WAAWA,EAAEA;AACnCA,0BAAcA,EAAEA,CAACA;SACjBA,MAAMA,IAAIA,QAAQA,CAACA,IAAIA,EAAEA;AACzBA,gBAAIA,QAAQA,CAACA,IAAIA,CAACA,UAAUA,CAACA,eAAeA,CAACA,EAAEA;AAC9CA,oBAAMA,KAAKA,GAAGA,QAAQA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;AACpDA,4BAAYA,CAACA,OAAOA,CAACA,aAAaA,EAAEA,KAAKA,CAACA,CAACA;AAC3CA,wBAAQA,CAACA,IAAIA,GAAGA,EAAEA,CAACA;AACnBA,wBAAQA,CAACA,MAAMA,EAAEA,CAACA;aAClBA,MAAMA;kDACkBA,QAAQA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA,KAAKA,CAACA,GAAGA,CAACA;;;;oBAAnDA,QAAQA;oBAAEA,GAAGA;;AACpBA,mBAAGA,CAACA,YAAYA,CAACA,CAACA;AAClBA,yBAASA,CAACA,SAASA,GAAGA,qBAAqBA,CAACA;AAC5CA,sBAAMA,CAACA,iBAAiBA,CAACA,QAAQA,EAAEA,GAAGA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;aAC1DA;SACDA,MAAMA,IAAIA,MAAMA,CAACA,YAAYA,IAAIA,CAACA,QAAQA,EAAEA;AAC5CA,8BAAkBA,EAAEA,CAACA;SACrBA,MAAMA;AACNA,eAAGA,CAACA,uCAAuCA,CAACA,CAACA;SAC7CA;KACDA,CAACA,CAACA;CACHA,CAAAA,CAxFM,GAAG,KAAH,GAAG,GAAA,EAAA,CAAA,CAAA,CAwFT","file":"tmp.js","sourcesContent":[null,"var base64;\n(function (base64_1) {\n    base64_1._chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    base64_1._chars_url = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n    base64_1.encode = function (arraybuffer, url, equals) {\n        const chars = url ? base64_1._chars_url : base64_1._chars;\n        var bytes = new Uint8Array(arraybuffer), len = bytes.length, base64 = \"\";\n        for (let i = 0; i < len; i += 3) {\n            base64 += chars[bytes[i] >> 2];\n            base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n            base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n            base64 += chars[bytes[i + 2] & 63];\n        }\n        if ((len % 3) === 2) {\n            base64 = base64.substring(0, base64.length - 1) + (equals ? \"=\" : \"\");\n        }\n        else if (len % 3 === 1) {\n            base64 = base64.substring(0, base64.length - 2) + (equals ? \"==\" : \"\");\n        }\n        return base64;\n    };\n    base64_1.decode = function (base64, url) {\n        const chars = url ? base64_1._chars_url : base64_1._chars;\n        var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n        if (base64[base64.length - 1] === \"=\") {\n            bufferLength--;\n            if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n            }\n        }\n        var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n        for (i = 0; i < len; i += 4) {\n            encoded1 = chars.indexOf(base64[i]);\n            encoded2 = chars.indexOf(base64[i + 1]);\n            encoded3 = chars.indexOf(base64[i + 2]);\n            encoded4 = chars.indexOf(base64[i + 3]);\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n        }\n        return arraybuffer;\n    };\n})(base64 || (base64 = {}));\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nclass Github {\n    constructor(access_token = null, apiUrl = `https://api.github.com/`) {\n        this.access_token = access_token;\n        this.apiUrl = apiUrl;\n    }\n    getRepo(repo) {\n        return new GithubRepo(this, repo);\n    }\n    fetch(path, data, authenticate = false) {\n        return __awaiter(this, void 0, Promise, function* () {\n            if (!data)\n                data = { headers: new Headers() };\n            if (!data.headers)\n                data.headers = new Headers();\n            const h = data.headers;\n            if (authenticate)\n                if (this.access_token)\n                    h.append(\"Authorization\", \"token \" + this.access_token);\n                else\n                    throw Error(`can't ${data.method} ${path} without access token`);\n            log(\"fetching \" + (data.method || \"\") + \" \" + this.apiUrl + path);\n            return yield fetch(this.apiUrl + path, data);\n        });\n    }\n    fetchJSON(path, data, authenticate = false) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield (yield this.fetch(path, data, authenticate)).json();\n        });\n    }\n    fetchRaw(path, data, authenticate = false) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const headers = new Headers();\n            headers.append(\"Accept\", \"application/vnd.github.v3.raw\");\n            const r = yield this.fetch(path, { headers }, authenticate);\n            return yield r.arrayBuffer();\n        });\n    }\n    postJSON(path, data, method = \"POST\", authenticate = false) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const headers = new Headers();\n            headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\n            return yield this.fetchJSON(path, { method, headers, body: JSON.stringify(data) }, authenticate);\n        });\n    }\n    createGist(description, files, is_public = true, authenticate = false) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.postJSON(\"gists\", { description, public: is_public, files: files }, \"POST\", authenticate);\n        });\n    }\n    getGist(id) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.fetchJSON(\"gists/\" + id);\n        });\n    }\n}\nclass GithubRepo {\n    constructor(github, repo) {\n        this.github = github;\n        this.repo = repo;\n    }\n    getRefs() {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.github.fetchJSON(this.repo + \"/git/refs\");\n        });\n    }\n    getRef(ref = \"heads/master\") {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.github.fetchJSON(this.repo + \"/git/refs/\" + ref);\n        });\n    }\n    updateRef(sha, ref = \"heads/master\") {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.github.postJSON(this.repo + \"/git/refs/\" + ref, { sha }, \"PATCH\");\n        });\n    }\n    getHead() {\n        return __awaiter(this, void 0, Promise, function* () {\n            const branch = yield this.getRef();\n            return branch.object.sha;\n        });\n    }\n    getTree(sha, recursive = false) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.github.fetchJSON(this.repo + \"/git/trees/\" + sha + (recursive ? \"?recursive=1\" : \"\"));\n        });\n    }\n    createBlob(data) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const resp = yield this.github.postJSON(this.repo + \"/git/blobs\", {\n                encoding: \"base64\", content: base64.encode(data, false, true)\n            });\n            return resp.sha;\n        });\n    }\n    getBlob(sha) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.github.fetchRaw(this.repo + \"/git/blobs/\" + sha);\n        });\n    }\n    createTree(base_tree, path, sha) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const resp = yield this.github.postJSON(this.repo + \"/git/trees\", {\n                base_tree, tree: [{ path, mode: \"100644\", type: \"blob\", sha }]\n            });\n            return resp;\n        });\n    }\n    createCommit(parent, tree, message) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.github.postJSON(this.repo + \"/git/commits\", { message, parents: [parent], tree });\n        });\n    }\n    pushFileToMaster(path, content, commitMessage) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const head = yield this.getHead();\n            const newtree = yield this.createTree(head, path, yield this.createBlob(content.buffer));\n            const newsha = newtree.sha;\n            const files = newtree.tree;\n            const filesha = files.filter(file => file.path == path)[0].sha;\n            const commit = yield this.createCommit(head, newsha, commitMessage);\n            yield this.updateRef(commit.sha);\n            return filesha;\n        });\n    }\n}\nconst repoName = null; // \"phire-store/testing\";\nlet github = new Github(typeof localStorage != \"undefined\" && localStorage.getItem(\"accessToken\"));\nlet repo = github.getRepo(repoName);\nconst $ = s => [].slice.call(document.querySelectorAll(s));\nfunction log(info) {\n    console.log(info);\n    const e = $(\"#log\")[0];\n    if (e)\n        e.innerHTML += info + \"<br>\";\n}\nvar SimpleCrypto;\n(function (SimpleCrypto) {\n    SimpleCrypto.encryptionAlgorithm = \"AES-GCM\";\n    function encrypt(data) {\n        return __awaiter(this, void 0, Promise, function* () {\n            log(\"Generating key and IV...\");\n            const key = yield crypto.subtle.generateKey({ name: SimpleCrypto.encryptionAlgorithm, length: 128 }, true, [\"encrypt\"]);\n            const iv = new Uint8Array(16);\n            crypto.getRandomValues(iv);\n            log(\"Encrypting...\");\n            const encrypted = yield crypto.subtle.encrypt({ name: SimpleCrypto.encryptionAlgorithm, iv }, key, data);\n            return {\n                data: [iv, new Uint8Array(encrypted)],\n                key: base64.encode(yield crypto.subtle.exportKey(\"raw\", key), true, false),\n            };\n        });\n    }\n    SimpleCrypto.encrypt = encrypt;\n    function decrypt(data, key_str) {\n        return __awaiter(this, void 0, Promise, function* () {\n            log(\"Decoding IV...\");\n            const iv = data.subarray(0, 16);\n            const encrypted_data = data.subarray(16);\n            const key = new Uint8Array(base64.decode(key_str, true));\n            log(\"Decrypting...\");\n            const imported_key = yield crypto.subtle.importKey(\"raw\", key, SimpleCrypto.encryptionAlgorithm, false, [\"decrypt\"]);\n            return yield crypto.subtle.decrypt({ name: SimpleCrypto.encryptionAlgorithm, iv }, imported_key, encrypted_data);\n        });\n    }\n    SimpleCrypto.decrypt = decrypt;\n})(SimpleCrypto || (SimpleCrypto = {}));\nvar Upload;\n(function (Upload) {\n    const gistUploadMethod = function (d) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const f = Util.randomString(1, 16);\n            if (d.byteLength >= 1000 * 3 / 4 * 1000)\n                console.warn(\"Data should be < 700 kB to avoid calling api twice\");\n            if (d.byteLength >= 2e6)\n                throw \"Data must be < 2 MB\"; // more should be possible\n            return (yield github.createGist(Util.randomString(0, 10), {\n                [f]: { content: base64.encode(d.buffer, true, false) }\n            })).id;\n        });\n    };\n    const repoUploadMethod = (d) => repo.pushFileToMaster(Util.randomString(1, 16), d, \"add\");\n    let uploadMethod = repoName ? repoUploadMethod : gistUploadMethod;\n    let downloadMethod;\n    if (repoName)\n        downloadMethod = (sha) => repo.getBlob(sha);\n    else\n        downloadMethod = function (sha) {\n            return __awaiter(this, void 0, Promise, function* () {\n                const gist = yield github.getGist(sha);\n                const file = gist.files[Object.keys(gist.files)[0]];\n                if (file.truncated) {\n                    return base64.decode(yield (yield fetch(file.raw_url)).text(), true);\n                }\n                else\n                    return base64.decode(file.content, true);\n            });\n        };\n    function getAllowUploadURL() {\n        return __awaiter(this, void 0, Promise, function* () {\n            location.hash = \"#allowupload!\" + github.access_token;\n        });\n    }\n    Upload.getAllowUploadURL = getAllowUploadURL;\n    function uploadEncrypted(meta, raw_data) {\n        return __awaiter(this, void 0, Promise, function* () {\n            log(\"Uploading...\");\n            const nullByte = new Uint8Array(1);\n            const inputData = yield Util.joinBuffers(new TextEncoder().encode(JSON.stringify(meta)), nullByte, raw_data);\n            const { data, key } = yield SimpleCrypto.encrypt(inputData);\n            // TODO: don't copy all data twice (via Util.joinBuffers)\n            return { data, key, sha: yield uploadMethod(yield Util.joinBuffers(...data)) };\n        });\n    }\n    Upload.uploadEncrypted = uploadEncrypted;\n    function downloadEncrypted(sha, key) {\n        return __awaiter(this, void 0, Promise, function* () {\n            sha = Util.arrToHex(new Uint8Array(base64.decode(sha, true)));\n            const buf = yield SimpleCrypto.decrypt(new Uint8Array(yield downloadMethod(sha)), key);\n            const sep = new Uint8Array(buf).indexOf(0);\n            const meta = new TextDecoder().decode(new Uint8Array(buf, 0, sep));\n            log(\"Decoded metadata: \" + meta);\n            return {\n                meta: JSON.parse(meta),\n                data: new Uint8Array(buf, sep + 1)\n            };\n        });\n    }\n    Upload.downloadEncrypted = downloadEncrypted;\n})(Upload || (Upload = {}));\nvar Util;\n(function (Util) {\n    function readFile(f) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return new Promise(resolve => {\n                const r = new FileReader();\n                r.onload = e => resolve(r.result);\n                r.readAsArrayBuffer(f);\n            });\n        });\n    }\n    Util.readFile = readFile;\n    function randomString(minlength, maxlength = minlength) {\n        const length = (Math.random() * (maxlength + 1 - minlength) + minlength) | 0;\n        return base64.encode(crypto.getRandomValues(new Uint8Array(length * 3 / 4 + 2)).buffer, true, false).substr(0, length);\n    }\n    Util.randomString = randomString;\n    function hexToArr(hex) {\n        const out = new Uint8Array(hex.length / 2);\n        for (let i = 0; i < hex.length; i += 2) {\n            out[i / 2] = parseInt(hex.substr(i, 2), 16);\n        }\n        return out;\n    }\n    Util.hexToArr = hexToArr;\n    function arrToHex(arr) {\n        let out = \"\";\n        for (const byte of arr)\n            out += (byte < 16 ? \"0\" + byte.toString(16) : byte.toString(16));\n        return out;\n    }\n    Util.arrToHex = arrToHex;\n    function joinBuffers(...arrs) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return new Uint8Array(yield Util.readFile(new Blob(arrs)));\n        });\n    }\n    Util.joinBuffers = joinBuffers;\n    function htmlEscape(s) {\n        const div = document.createElement(\"div\");\n        div.textContent = s;\n        return div.innerHTML;\n    }\n    Util.htmlEscape = htmlEscape;\n    function getMimeType(fname) {\n        const ext = fname.split(\".\").pop();\n        const map = { jpg: \"image/jpeg\", png: \"image/png\", mp3: \"audio/mpeg\" };\n        return map[fname] || \"\";\n    }\n    Util.getMimeType = getMimeType;\n    function createBlobUrl(fname, data) {\n        const magics = new Map([['jpg', '']]);\n        const magic = new DataView(data.buffer, 0 + data.byteOffset, 2).getUint16(0, false);\n        const mime = magics[magic];\n        log(`Displaying ${data.byteLength / 1000} kByte ${mime || \"unknown mime type: 0x\" + magic.toString(16)}`);\n        return URL.createObjectURL(new Blob([data], { type: mime || \"image/jpeg\" }));\n    }\n    Util.createBlobUrl = createBlobUrl;\n})(Util || (Util = {}));\nvar GUI;\n(function (GUI) {\n    const container = $(\".container\")[0];\n    ;\n    const types = [\n        { name: \"Text\", toHTML: (f, data) => `<pre class=\"uploaded\">${new TextDecoder().decode(data)}</pre>` },\n        { name: \"Raw\", toHTML: (f, data) => `<a href=\"${Util.createBlobUrl(f, data)}\" download=\"${f}\">Download ${f}</a>` },\n        { name: \"Image\", toHTML: (f, data) => `<img src=\"${Util.createBlobUrl(f, data)}\">` },\n        { name: \"Audio\", toHTML: (f, data) => `<audio controls><source src=\"${Util.createBlobUrl(f, data)}\"></audio>` },\n        { name: \"Video\", toHTML: (f, data) => `<video controls><source src=\"${Util.createBlobUrl(f, data)}\"></video>` }\n    ];\n    function displayFile(info) {\n        const type = types.filter(t => t.name == info.meta.type)[0];\n        if (type) {\n            container.innerHTML = `<h3>File ${Util.htmlEscape(info.meta.name)}</h3>`\n                + type.toHTML(info.meta.name, info.data);\n            log(\"Displayed file as \" + info.meta.type);\n        }\n        else\n            log(\"unknown type \" + info.meta.type);\n    }\n    function beginUpload() {\n        return __awaiter(this, void 0, Promise, function* () {\n            try {\n                const file = $(\"input[type=file]\")[0].files[0];\n                if (file) {\n                    const data = new Uint8Array(yield Util.readFile(file));\n                    const type = ($(\"input[type=radio]:checked\")[0] || {}).value;\n                    if (!type)\n                        throw Error(\"no type selected\");\n                    const meta = { name: file.name, type };\n                    const info = yield Upload.uploadEncrypted(meta, data);\n                    log(\"Uploaded. Updating URL and displaying...\");\n                    const sha = base64.encode(Util.hexToArr(info.sha).buffer, true, false);\n                    history.replaceState({}, \"\", \"#\" + sha + \"!\" + info.key);\n                    displayFile({ meta, data });\n                }\n                else\n                    throw Error(\"no file selected\");\n            }\n            catch (e) {\n                log(e);\n                throw e;\n            }\n        });\n    }\n    GUI.beginUpload = beginUpload;\n    function initializeUploader() {\n        container.innerHTML = `\n\t\t\t<h3>Upload a file (image/audio/video/text)</h3>\n\t\t\t<p><input type=\"file\" id=\"fileinput\"></p>\n\t\t\t${types.map(type => `<input type=\"radio\" name=\"type\" id=\"type_${type.name}\" value=\"${type.name}\">\n\t\t\t\t <label for=\"type_${type.name}\">${type.name}</label>`).join(\"\")}\n\t\t\t<button id=\"uploadbutton\">Upload</button>\n\t\t\t<p>The file will be encrypted and authenticated using 128bit AES-GCM.</p>\n\t\t`;\n        $(\"#uploadbutton\")[0].addEventListener('click', beginUpload);\n    }\n    function initializeNode() {\n        return __awaiter(this, void 0, Promise, function* () {\n            // (broken) running from node\n            const args = process.argv.slice(2);\n            if (args.length !== 1) {\n                console.log(\"usage: node \" + process.argv[1] + \" [filename to upload]\");\n                process.exit(1);\n            }\n            else {\n                console.log(\"uploading\");\n                const fs = require('fs');\n                if (!fs.existsSync(args[0]))\n                    throw args[0] + \" does not exist\";\n                const data = new Uint8Array(fs.readFileSync(args[0]));\n            }\n        });\n    }\n    document.addEventListener('DOMContentLoaded', () => {\n        if (typeof process !== \"undefined\") {\n            initializeNode();\n        }\n        else if (location.hash) {\n            if (location.hash.startsWith(\"#allowupload!\")) {\n                const token = location.hash.substr(1).split(\"!\")[1];\n                localStorage.setItem(\"accessToken\", token);\n                location.hash = \"\";\n                location.reload();\n            }\n            else {\n                const [filename, key] = location.hash.substr(1).split(\"!\");\n                log(\"Loading...\");\n                container.innerHTML = \"<h3>Loading...</h3>\";\n                Upload.downloadEncrypted(filename, key).then(displayFile);\n            }\n        }\n        else if (github.access_token || !repoName) {\n            initializeUploader();\n        }\n        else {\n            log(\"No image given and upload key missing\");\n        }\n    });\n})(GUI || (GUI = {}));\n//# sourceMappingURL=tmp.js.map",null,null]}