{"version":3,"sources":["../src/base64.ts","../src/github.ts","../src/main.ts"],"names":["base64","Github","Github.constructor","Github.fetch","Github.fetchJSON","Github.fetchRaw","Github.postJSON","Github.createGist","Github.getGist","log","showLog","SimpleCrypto","SimpleCrypto.encrypt","SimpleCrypto.decrypt","Upload","Upload.uploadToGist","Upload.downloadFromGist","Upload.uploadEncrypted","Upload.downloadEncrypted","Util","Util.readFile","Util.randomString","Util.hexToArr","Util.arrToHex","Util.joinBuffers","Util.htmlEscape","Util.getMimeType","Util.createBlobUrl","GUI","GUI.displayFile","GUI.beginUpload","GUI.initializeUploader","GUI.initializeNode"],"mappings":"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","file":"tmp.js","sourcesContent":[null,"var base64;\n(function (base64_1) {\n    base64_1._chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    base64_1._chars_url = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n    base64_1.encode = function (arraybuffer, url, equals) {\n        const chars = url ? base64_1._chars_url : base64_1._chars;\n        var bytes = new Uint8Array(arraybuffer), len = bytes.length, base64 = \"\";\n        for (let i = 0; i < len; i += 3) {\n            base64 += chars[bytes[i] >> 2];\n            base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n            base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n            base64 += chars[bytes[i + 2] & 63];\n        }\n        if ((len % 3) === 2) {\n            base64 = base64.substring(0, base64.length - 1) + (equals ? \"=\" : \"\");\n        }\n        else if (len % 3 === 1) {\n            base64 = base64.substring(0, base64.length - 2) + (equals ? \"==\" : \"\");\n        }\n        return base64;\n    };\n    base64_1.decode = function (base64, url) {\n        const chars = url ? base64_1._chars_url : base64_1._chars;\n        var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n        if (base64[base64.length - 1] === \"=\") {\n            bufferLength--;\n            if (base64[base64.length - 2] === \"=\") {\n                bufferLength--;\n            }\n        }\n        var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n        for (i = 0; i < len; i += 4) {\n            encoded1 = chars.indexOf(base64[i]);\n            encoded2 = chars.indexOf(base64[i + 1]);\n            encoded3 = chars.indexOf(base64[i + 2]);\n            encoded4 = chars.indexOf(base64[i + 3]);\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n        }\n        return arraybuffer;\n    };\n})(base64 || (base64 = {}));\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nclass Github {\n    constructor(apiUrl = `https://api.github.com/`) {\n        this.apiUrl = apiUrl;\n    }\n    fetch(path, data) {\n        return __awaiter(this, void 0, Promise, function* () {\n            log(\"fetching \" + (data && data.method || \"\") + \" \" + this.apiUrl + path);\n            return yield fetch(this.apiUrl + path, data);\n        });\n    }\n    fetchJSON(path, data) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield (yield this.fetch(path, data)).json();\n        });\n    }\n    fetchRaw(path, data) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const headers = new Headers();\n            headers.append(\"Accept\", \"application/vnd.github.v3.raw\");\n            const r = yield this.fetch(path, { headers });\n            return yield r.arrayBuffer();\n        });\n    }\n    postJSON(path, data, method = \"POST\") {\n        return __awaiter(this, void 0, Promise, function* () {\n            const headers = new Headers();\n            headers.append(\"Content-Type\", \"application/json;charset=UTF-8\");\n            return yield this.fetchJSON(path, { method, headers, body: JSON.stringify(data) });\n        });\n    }\n    createGist(description, files, is_public = true, authenticate = false) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.postJSON(\"gists\", { description, public: is_public, files: files }, \"POST\");\n        });\n    }\n    getGist(id) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return yield this.fetchJSON(\"gists/\" + id);\n        });\n    }\n}\nlet github = new Github();\nconst $ = s => [].slice.call(document.querySelectorAll(s));\nfunction log(info) {\n    console.log(info);\n    const e = $(\"#log\")[0];\n    if (e)\n        e.innerHTML += info + \"<br>\";\n}\nfunction showLog() {\n    $(\"button[onclick='showLog()']\")[0].style.display = 'none';\n    $(\"#showlog\")[0].style.display = '';\n}\nvar SimpleCrypto;\n(function (SimpleCrypto) {\n    SimpleCrypto.encryptionAlgorithm = \"AES-GCM\";\n    function encrypt(data) {\n        return __awaiter(this, void 0, Promise, function* () {\n            log(\"Generating key and IV...\");\n            const key = yield crypto.subtle.generateKey({ name: SimpleCrypto.encryptionAlgorithm, length: 128 }, true, [\"encrypt\"]);\n            const iv = new Uint8Array(16);\n            crypto.getRandomValues(iv);\n            log(\"Encrypting...\");\n            const encrypted = yield crypto.subtle.encrypt({ name: SimpleCrypto.encryptionAlgorithm, iv }, key, data);\n            return {\n                data: [iv, new Uint8Array(encrypted)],\n                key: base64.encode(yield crypto.subtle.exportKey(\"raw\", key), true, false),\n            };\n        });\n    }\n    SimpleCrypto.encrypt = encrypt;\n    function decrypt(data, key_str) {\n        return __awaiter(this, void 0, Promise, function* () {\n            log(\"Decoding IV...\");\n            const iv = data.subarray(0, 16);\n            const encrypted_data = data.subarray(16);\n            const key = new Uint8Array(base64.decode(key_str, true));\n            log(\"Decrypting...\");\n            const imported_key = yield crypto.subtle.importKey(\"raw\", key, SimpleCrypto.encryptionAlgorithm, false, [\"decrypt\"]);\n            return yield crypto.subtle.decrypt({ name: SimpleCrypto.encryptionAlgorithm, iv }, imported_key, encrypted_data);\n        });\n    }\n    SimpleCrypto.decrypt = decrypt;\n})(SimpleCrypto || (SimpleCrypto = {}));\nvar Upload;\n(function (Upload) {\n    function uploadToGist(d) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const f = Util.randomString(1, 16);\n            if (d.byteLength >= 1000 * 3 / 4 * 1000)\n                log(\"Data should be < 700 kB to avoid calling api twice\");\n            if (d.byteLength >= 5e6)\n                throw \"Data must be < 5 MB\"; // more should be possible\n            return (yield github.createGist(Util.randomString(0, 10), {\n                [f]: { content: base64.encode(d.buffer, true, false) }\n            })).id;\n        });\n    }\n    function downloadFromGist(sha) {\n        return __awaiter(this, void 0, Promise, function* () {\n            const gist = yield github.getGist(sha);\n            const file = gist.files[Object.keys(gist.files)[0]];\n            if (file.truncated) {\n                return base64.decode(yield (yield fetch(file.raw_url)).text(), true);\n            }\n            else\n                return base64.decode(file.content, true);\n        });\n    }\n    function uploadEncrypted(meta, raw_data) {\n        return __awaiter(this, void 0, Promise, function* () {\n            log(\"Uploading...\");\n            const nullByte = new Uint8Array(1);\n            const inputData = yield Util.joinBuffers(new TextEncoder().encode(JSON.stringify(meta)), nullByte, raw_data);\n            const { data, key } = yield SimpleCrypto.encrypt(inputData);\n            // TODO: don't copy all data twice (via Util.joinBuffers)\n            return { data, key, sha: yield uploadToGist(yield Util.joinBuffers(...data)) };\n        });\n    }\n    Upload.uploadEncrypted = uploadEncrypted;\n    function downloadEncrypted(sha, key) {\n        return __awaiter(this, void 0, Promise, function* () {\n            sha = Util.arrToHex(new Uint8Array(base64.decode(sha, true)));\n            const buf = yield SimpleCrypto.decrypt(new Uint8Array(yield downloadFromGist(sha)), key);\n            const sep = new Uint8Array(buf).indexOf(0);\n            const meta = new TextDecoder().decode(new Uint8Array(buf, 0, sep));\n            log(\"Decoded metadata: \" + meta);\n            return {\n                meta: JSON.parse(meta),\n                data: new Uint8Array(buf, sep + 1)\n            };\n        });\n    }\n    Upload.downloadEncrypted = downloadEncrypted;\n})(Upload || (Upload = {}));\nvar Util;\n(function (Util) {\n    function readFile(f) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return new Promise(resolve => {\n                const r = new FileReader();\n                r.onload = e => resolve(r.result);\n                r.readAsArrayBuffer(f);\n            });\n        });\n    }\n    Util.readFile = readFile;\n    function randomString(minlength, maxlength = minlength) {\n        const length = (Math.random() * (maxlength + 1 - minlength) + minlength) | 0;\n        return base64.encode(crypto.getRandomValues(new Uint8Array(length * 3 / 4 + 2)).buffer, true, false).substr(0, length);\n    }\n    Util.randomString = randomString;\n    function hexToArr(hex) {\n        const out = new Uint8Array(hex.length / 2);\n        for (let i = 0; i < hex.length; i += 2) {\n            out[i / 2] = parseInt(hex.substr(i, 2), 16);\n        }\n        return out;\n    }\n    Util.hexToArr = hexToArr;\n    function arrToHex(arr) {\n        let out = \"\";\n        for (const byte of arr)\n            out += (byte < 16 ? \"0\" + byte.toString(16) : byte.toString(16));\n        return out;\n    }\n    Util.arrToHex = arrToHex;\n    function joinBuffers(...arrs) {\n        return __awaiter(this, void 0, Promise, function* () {\n            return new Uint8Array(yield Util.readFile(new Blob(arrs)));\n        });\n    }\n    Util.joinBuffers = joinBuffers;\n    function htmlEscape(s) {\n        const div = document.createElement(\"div\");\n        div.textContent = s;\n        return div.innerHTML;\n    }\n    Util.htmlEscape = htmlEscape;\n    function getMimeType(fname) {\n        const ext = fname.split(\".\").pop();\n        const map = { jpg: \"image/jpeg\", png: \"image/png\", mp3: \"audio/mpeg\" };\n        return map[fname] || \"\";\n    }\n    Util.getMimeType = getMimeType;\n    function createBlobUrl(fname, data) {\n        log(`Displaying ${data.byteLength / 1000} kByte file`);\n        return URL.createObjectURL(new Blob([data]));\n    }\n    Util.createBlobUrl = createBlobUrl;\n})(Util || (Util = {}));\nvar GUI;\n(function (GUI) {\n    const container = $(\".container\")[0];\n    ;\n    const types = [\n        { name: \"Text\", toHTML: (f, data) => `<pre class=\"uploaded\">${new TextDecoder().decode(data)}</pre>` },\n        { name: \"Raw\", toHTML: (f, data) => `<a href=\"${Util.createBlobUrl(f, data)}\" download=\"${f}\">Download ${f}</a>` },\n        { name: \"Image\", toHTML: (f, data) => `<img src=\"${Util.createBlobUrl(f, data)}\">` },\n        { name: \"Audio\", toHTML: (f, data) => `<audio controls><source src=\"${Util.createBlobUrl(f, data)}\"></audio>` },\n        { name: \"Video\", toHTML: (f, data) => `<video controls><source src=\"${Util.createBlobUrl(f, data)}\"></video>` }\n    ];\n    function displayFile(info) {\n        const type = types.filter(t => t.name == info.meta.type)[0];\n        if (type) {\n            container.innerHTML = `<h3>File ${Util.htmlEscape(info.meta.name)}</h3>`\n                + type.toHTML(info.meta.name, info.data);\n            log(\"Displayed file as \" + info.meta.type);\n        }\n        else\n            log(\"unknown type \" + info.meta.type);\n    }\n    function beginUpload() {\n        return __awaiter(this, void 0, Promise, function* () {\n            try {\n                const file = $(\"input[type=file]\")[0].files[0];\n                if (file) {\n                    const data = new Uint8Array(yield Util.readFile(file));\n                    const type = ($(\"input[type=radio]:checked\")[0] || {}).value;\n                    if (!type)\n                        throw Error(\"no type selected\");\n                    container.innerHTML = \"<h3>Uploading...</h3>\";\n                    const meta = { name: file.name, type };\n                    const info = yield Upload.uploadEncrypted(meta, data);\n                    log(\"Uploaded. Updating URL and displaying...\");\n                    const sha = base64.encode(Util.hexToArr(info.sha).buffer, true, false);\n                    history.replaceState({}, \"\", \"#\" + sha + \"!\" + info.key);\n                    displayFile({ meta, data });\n                    $(\"#removeIfUpload\")[0].style.display = \"\";\n                }\n                else\n                    throw Error(\"no file selected\");\n            }\n            catch (e) {\n                log(e);\n                showLog();\n                throw e;\n            }\n        });\n    }\n    GUI.beginUpload = beginUpload;\n    function initializeUploader() {\n        container.innerHTML = `\n\t\t\t<h3>Upload a file (image/audio/video/text)</h3>\n\t\t\t<p><input type=\"file\" id=\"fileinput\"></p>\n\t\t\t${types.map(type => `<input type=\"radio\" name=\"type\" id=\"type_${type.name}\" value=\"${type.name}\">\n\t\t\t\t <label for=\"type_${type.name}\">${type.name}</label>`).join(\"\")}\n\t\t\t<button id=\"uploadbutton\">Upload</button>\n\t\t\t<p>File must be < 5MB. The file will be encrypted and authenticated using 128bit AES-GCM.</p>\n\t\t`;\n        $(\"#removeIfUpload\")[0].style.display = \"none\";\n        $(\"#uploadbutton\")[0].addEventListener('click', beginUpload);\n    }\n    function initializeNode() {\n        return __awaiter(this, void 0, Promise, function* () {\n            // (broken) running from node\n            const args = process.argv.slice(2);\n            if (args.length !== 1) {\n                console.log(\"usage: node \" + process.argv[1] + \" [filename to upload]\");\n                process.exit(1);\n            }\n            else {\n                console.log(\"uploading\");\n                const fs = require('fs');\n                if (!fs.existsSync(args[0]))\n                    throw args[0] + \" does not exist\";\n                const data = new Uint8Array(fs.readFileSync(args[0]));\n            }\n        });\n    }\n    document.addEventListener('DOMContentLoaded', () => {\n        if (typeof process !== \"undefined\") {\n            initializeNode();\n        }\n        else if (location.hash) {\n            const [filename, key] = location.hash.substr(1).split(\"!\");\n            log(\"Loading...\");\n            container.innerHTML = \"<h3>Loading...</h3>\";\n            Upload.downloadEncrypted(filename, key).then(displayFile);\n        }\n        else {\n            initializeUploader();\n        }\n    });\n    window.addEventListener('hashchange', () => location.reload());\n})(GUI || (GUI = {}));\n//# sourceMappingURL=tmp.js.map",null,null]}